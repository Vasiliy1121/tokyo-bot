from openai import OpenAI
import re
from config import OPENAI_API_KEY

openai_client = OpenAI(api_key=OPENAI_API_KEY)

async def generate_itinerary(data):
    prompt = f"""
    –¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ç—É—Ä–∏–∑–º—É –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–∏–¥ –≤ –Ø–ø–æ–Ω–∏–∏, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö, —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏ –æ—á–µ–Ω—å –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø–æ –¢–æ–∫–∏–æ.

    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–∏–ª –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç —Å —Ç–∞–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:

    1. –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏: {data['days']} –¥–Ω–µ–π.
    2. –°–æ—Å—Ç–∞–≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤: {data['travelers']}.
    3. –û—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã: {data['interests']}.
    4. –¢–µ–º–ø –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è: {data['pace']}.
    5. –£—Ä–æ–≤–µ–Ω—å –±—é–¥–∂–µ—Ç–∞: {data['budget']}.
    6. –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –µ–¥–µ: {data['food']}.
    7. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {data['special_requests']}.

    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ—Å—Ç–∞–≤—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω—ã–π, –ª–æ–≥–∏—á–Ω—ã–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —Å—Ç—Ä–æ–≥–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º:

    - üìå **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–Ω—è:**  
      –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑–¥–µ–ª—ë–Ω –Ω–∞ —Ç—Ä–∏ –ª–æ–≥–∏—á–Ω—ã–µ —á–∞—Å—Ç–∏:
      - üåÖ **–£—Ç—Ä–æ** (–ø—Ä–∏–º–µ—Ä–Ω–æ 8:00‚Äì12:00) ‚Äî –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –º–µ—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –ª—É—á—à–µ –ø–æ—Å–µ—â–∞—Ç—å —É—Ç—Ä–æ–º.
      - üèôÔ∏è **–î–µ–Ω—å** (–ø—Ä–∏–º–µ—Ä–Ω–æ 12:00‚Äì17:00) ‚Äî –æ—Å–Ω–æ–≤–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –ø—Ä–æ–≥—É–ª–∫–∏ –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è.
      - üåÉ **–í–µ—á–µ—Ä** (–ø—Ä–∏–º–µ—Ä–Ω–æ 17:00‚Äì22:00) ‚Äî –º–µ—Å—Ç–∞ –¥–ª—è –≤–µ—á–µ—Ä–Ω–∏—Ö –ø—Ä–æ–≥—É–ª–æ–∫, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π, —É–∂–∏–Ω–∞ –∏ –æ—Ç–¥—ã—Ö–∞.

    - üó∫Ô∏è **–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**  
      –î–ª—è –∫–∞–∂–¥–æ–≥–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞ —É–∫–∞–∑—ã–≤–∞–π —Ç–æ—á–Ω—ã–µ –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —Ä–∞–π–æ–Ω—ã –∏–ª–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–º—É–∑–µ–∏, –ø–∞—Ä–∫–∏, —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã, —Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã –∏ –ø—Ä.), –∫–æ—Ç–æ—Ä—ã–µ –∏–¥–µ–∞–ª—å–Ω–æ –≤–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã.

    - üöâ **–õ–æ–≥–∏—Å—Ç–∏–∫–∞ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç:**  
      –£–∫–∞–∑—ã–≤–∞–π —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è –º–µ–∂–¥—É –º–µ—Å—Ç–∞–º–∏ (–º–µ—Ç—Ä–æ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ª–∏–Ω–∏–π, –∞–≤—Ç–æ–±—É—Å—ã, –ø–µ—à–∫–æ–º –∏–ª–∏ —Ç–∞–∫—Å–∏). –£—á–∏—Ç—ã–≤–∞–π –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞ –ø–µ—Ä–µ–µ–∑–¥—ã –∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞–π –Ω–µ–ª–æ–≥–∏—á–Ω—ã—Ö –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π –ø–æ –≥–æ—Ä–æ–¥—É.

    - üç± **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é:**  
      –ü—Ä–µ–¥–ª–∞–≥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã, –∫–∞—Ñ–µ –∏–ª–∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è, —É—á–∏—Ç—ã–≤–∞—è –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –µ–¥–µ –∏ —É—Ä–æ–≤–µ–Ω—å –±—é–¥–∂–µ—Ç–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–π —Ç–∏–ø–∏—á–Ω—ã–µ —è–ø–æ–Ω—Å–∫–∏–µ –±–ª—é–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–æ–∏—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å.

    - üå§Ô∏è **–°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å –∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å:**  
      –£—á–∏—Ç—ã–≤–∞–π, —á—Ç–æ –ø–æ–µ–∑–¥–∫–∞ —Å–æ—Å—Ç–æ–∏—Ç—Å—è –≤ –∏—é–Ω–µ 2025 –≥–æ–¥–∞. –ü—Ä–µ–¥–ª–∞–≥–∞–π –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –º–µ—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã –∏–º–µ–Ω–Ω–æ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –≥–æ–¥–∞ (–ø–æ–≥–æ–¥–∞, —Å–µ–∑–æ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ –≥–æ—Ä–æ–¥–µ).

    - üë• **–°–æ—Å—Ç–∞–≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤:**  
      –¢—â–∞—Ç–µ–ª—å–Ω–æ —É—á–∏—Ç—ã–≤–∞–π —Å–ø–µ—Ü–∏—Ñ–∏–∫—É —Å–æ—Å—Ç–∞–≤–∞ –≥—Ä—É–ø–ø—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —ç—Ç–æ —Å–µ–º—å—è —Å –¥–µ—Ç—å–º–∏ ‚Äî –¥–æ–±–∞–≤—å –±–æ–ª—å—à–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –¥–µ—Ç—Å–∫–∏—Ö –º–µ—Å—Ç –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π, –µ—Å–ª–∏ —ç—Ç–æ –ø–∞—Ä–∞ ‚Äî –±–æ–ª—å—à–µ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Å—Ç.

    - üí° **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è:**  
      –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ —É—á–∏—Ç—ã–≤–∞–π —É–∫–∞–∑–∞–Ω–Ω—ã–µ –æ—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, —á—Ç–æ–±—ã –º–∞—Ä—à—Ä—É—Ç –±—ã–ª –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º.

    –§–æ—Ä–º–∞—Ç–∏—Ä—É–π –æ—Ç–≤–µ—Ç –æ—á–µ–Ω—å —á—ë—Ç–∫–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É—è –µ–≥–æ –ø–æ –¥–Ω—è–º:
    - –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–∞—á–∏–Ω–∞–π —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞ ¬´üìÖ –î–µ–Ω—å X¬ª.
    - –í–Ω—É—Ç—Ä–∏ –¥–Ω—è —Ä–∞–∑–¥–µ–ª—è–π –Ω–∞ –±–ª–æ–∫–∏ ¬´üåÖ –£—Ç—Ä–æ¬ª, ¬´üèôÔ∏è –î–µ–Ω—å¬ª, ¬´üåÉ –í–µ—á–µ—Ä¬ª.
    - –ù–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—Ç –∏ –∑–∞–≤–µ–¥–µ–Ω–∏–π –ø–∏—à–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ
    - –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ø–∏—à–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.

    –ú–∞—Ä—à—Ä—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º, –ø–æ–¥—Ä–æ–±–Ω—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º.  
    """

    response = openai_client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.7,
        max_tokens=3000
    )

    itinerary = response.choices[0].message.content.strip()
    itinerary_with_links = add_google_maps_links(itinerary)
    return itinerary_with_links


async def edit_day(current_itinerary, day_number, user_request):
    day_pattern = rf"(üìÖ?\s*–î–µ–Ω—å\s*{day_number}.*?)(?=(üìÖ?\s*–î–µ–Ω—å\s*\d+)|\Z)"
    match = re.search(day_pattern, current_itinerary, re.DOTALL)

    if not match:
        raise ValueError(f"–ù–µ –Ω–∞–π–¥–µ–Ω –î–µ–Ω—å {day_number}")

    day_text = match.group(1).strip()

    prompt = f"""
        –¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ç—É—Ä–∏–∑–º—É –≤ –¢–æ–∫–∏–æ. –í–æ—Ç —Ç–µ–∫—É—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –î–Ω—è {day_number} –º–∞—Ä—à—Ä—É—Ç–∞:

        {day_text}

        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
        "{user_request}"

        –°–æ–∑–¥–∞–π –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –î–Ω—è {day_number}, —É—á—Ç—è –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        –ò—Å–ø–æ–ª—å–∑—É–π —á–µ—Ç–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É (üìÖ –î–µ–Ω—å X, üåÖ –£—Ç—Ä–æ, üèôÔ∏è –î–µ–Ω—å, üåÉ –í–µ—á–µ—Ä).
        """

    response = openai_client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.7,
        max_tokens=1500
    )

    edited_day_text = response.choices[0].message.content.strip()
    new_itinerary = current_itinerary.replace(day_text, edited_day_text)

    return new_itinerary





import re

def add_google_maps_links(itinerary_text):
    def replace_link(match):
        action, place = match.groups()
        query = place.strip().replace(' ', '+')
        link = f"[{place.strip()}](https://www.google.com/maps/search/?api=1&query={query})"
        return f"- {action} {link}"

    pattern = re.compile(
        r"-\s*(–ü–æ—Å–µ—Ç–∏—Ç–µ|–ü–æ—Å–µ—â–µ–Ω–∏–µ|–≠–∫—Å–∫—É—Ä—Å–∏—è –ø–æ|–≠–∫—Å–∫—É—Ä—Å–∏—è –≤|–ü—Ä–æ–≥—É–ª–∫–∞ –ø–æ|–£–∂–∏–Ω –≤|–ó–∞–≤—Ç—Ä–∞–∫ –≤|–û–±–µ–¥ –≤|–ü–æ—Å–µ—Ç–∏—Ç—å|–ü—Ä–æ–≤–µ–¥–∏—Ç–µ —É—Ç—Ä–æ –≤)\s+([^\.,\n]+)"
    )
    return pattern.sub(replace_link, itinerary_text)





